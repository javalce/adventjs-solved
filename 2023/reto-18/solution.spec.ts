import { describe, expect, expectTypeOf, it } from 'vitest';

import { drawClock } from './solution';

describe('reto #18: El reloj digital', () => {
  it('return type', () => {
    expectTypeOf(drawClock('')).toBeArray();
  });

  it('drawClock("01:30")', () => {
    expect(drawClock('01:30')).toStrictEqual([
      ['*', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
      ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', ' ', '*'],
      ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      ['*', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
    ]);
  });

  it('rawClock("23:45")', () => {
    expect(drawClock('23:45')).toStrictEqual([
      ['*', '*', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', '*', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', ' '],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', ' '],
      ['*', '*', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
      ['*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'],
      ['*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'],
      ['*', '*', '*', ' ', '*', '*', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', '*', '*'],
    ]);
  });

  it('drawClock("16:48")', () => {
    expect(drawClock('16:48')).toStrictEqual([
      [' ', ' ', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', '*', '*'],
      [' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '*'],
      [' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', '*'],
      [' ', ' ', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
      [' ', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      [' ', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      [' ', ' ', '*', ' ', '*', '*', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', '*', '*'],
    ]);
  });

  it('drawClock("17:39")', () => {
    expect(drawClock('17:39')).toStrictEqual([
      [' ', ' ', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'],
      [' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
    ]);
  });

  it('drawClock("00:21")', () => {
    expect(drawClock('00:21')).toStrictEqual([
      ['*', '*', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', '*', '*', ' ', ' ', ' ', '*'],
      ['*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'],
      ['*', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'],
      ['*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', ' ', ' ', '*'],
      ['*', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'],
      ['*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'],
      ['*', '*', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', '*', '*', ' ', ' ', ' ', '*'],
    ]);
  });
});
